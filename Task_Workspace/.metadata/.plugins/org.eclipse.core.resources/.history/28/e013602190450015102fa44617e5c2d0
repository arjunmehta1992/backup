package com.example.saxparser.util;

import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

import com.example.saxparser.model.PostValue;

import android.util.Log;

public class XMLHelper extends DefaultHandler {

	private String URL_MAIN = "http://skillmuni.cloudapp.net/smservice/Api/Search?category=0&organization=1";
	String TAG = "XMLHelper";

	Boolean currTag = false;
	String currTagVal = "";
	private PostValue post = null;
	private ArrayList<PostValue> posts = new ArrayList<PostValue>();

	public ArrayList<PostValue> getPostsList() {
		return this.posts;
	}

	public void get() {
		try {
			SAXParserFactory factory = SAXParserFactory.newInstance();
			SAXParser mSaxParser = factory.newSAXParser();
			XMLReader mXmlReader = mSaxParser.getXMLReader();
			mXmlReader.setContentHandler(this);
			InputStream mInputStream = new URL(URL_MAIN).openStream();
			mXmlReader.parse(new InputSource(mInputStream));
		} catch (Exception e) {
			// Exceptions can be handled for different types
			// But, this is about XML Parsing not about Exception Handling
			Log.e(TAG, "Exception: " + e.getMessage());
		}
	}

	@Override
	public void characters(char[] ch, int start, int length)
			throws SAXException {

		if (currTag) {
			currTagVal = currTagVal + new String(ch, start, length);
			currTag = false;
		}
		super.characters(ch, start, length);
	}

	@Override
	public void endElement(String uri, String localName, String qName)
			throws SAXException {

		currTag = false;

		if (localName.equalsIgnoreCase("CONTENT_QUESTION"))
			post.setTitle(currTagVal);

		else if (localName.equalsIgnoreCase("EXPIRYDATE"))
			post.setGuid(currTagVal);

		else if (localName.equalsIgnoreCase("ID_CONTENT"))
			post.setDate(currTagVal);

		else if (localName.equalsIgnoreCase("ID_CONTENT_LEVEL"))
			posts.add(post);

		super.endElement(uri, localName, qName);
	}

	@Override
	public void startElement(String uri, String localName, String qName,
			Attributes attributes) throws SAXException {

		Log.i(TAG, "TAG: " + localName);

		currTag = true;
		currTagVal = "";
		// Whenever <post> element is encountered it will create new object of
		// PostValue
		if (localName.equals("SearchResponce"))
			post = new PostValue();

		System.err.println("Search Response=====>" + post);
		super.startElement(uri, localName, qName, attributes);
	}
}
