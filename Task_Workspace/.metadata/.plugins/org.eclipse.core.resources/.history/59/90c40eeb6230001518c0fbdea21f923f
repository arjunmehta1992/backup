package com.example.fileupload;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.InputStreamReader;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntity;
import org.apache.http.entity.mime.content.FileBody;
import org.apache.http.entity.mime.content.StringBody;
import org.apache.http.impl.client.DefaultHttpClient;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

public class HomeActivity extends Activity implements OnClickListener {

	private static final int RESULT_LOAD_IMG = 1;
	private Button btn_loadImage;
	private ImageView img_Image;
	String imgPath;
	String fileName;
	Button btn_UploadServer;
	Bitmap bm;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_home);
		init();
		clickListener();

	}

	public void init() {
		btn_loadImage = (Button) findViewById(R.id.btn_LoadImage);
		img_Image = (ImageView) findViewById(R.id.img_imageFromGallary);
		btn_UploadServer = (Button) findViewById(R.id.btn_UploadImages);
	}

	void clickListener() {
		btn_loadImage.setOnClickListener(this);
		btn_UploadServer.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btn_LoadImage:

			Intent galleryIntent = new Intent(
					Intent.ACTION_PICK,
					android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);

			startActivityForResult(galleryIntent, RESULT_LOAD_IMG);

			break;

		case R.id.btn_UploadImages:
			try {
				// bm = BitmapFactory.decodeResource(getResources(),
				// R.drawable.forest);
				bm = BitmapFactory.decodeFile(imgPath);
				executeMultipartPost();
			} catch (Exception e) {
				Log.e(e.getClass().getName(), e.getMessage());
			}

			break;

		default:
			break;
		}

	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {

		try {

			if (requestCode == RESULT_LOAD_IMG && resultCode == RESULT_OK
					&& null != data) {

				System.err.println("Request code==" + requestCode);

				Uri selectedImage = data.getData();
				String[] filePathColumn = { MediaStore.Images.Media.DATA };

				// Get the cursor
				Cursor cursor = getContentResolver().query(selectedImage,
						filePathColumn, null, null, null);
				// Move to first row
				cursor.moveToFirst();

				int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
				imgPath = cursor.getString(columnIndex);
				System.err.println("Image path==" + imgPath);
				Toast.makeText(HomeActivity.this, "Image path=" + imgPath,
						Toast.LENGTH_SHORT).show();
				cursor.close();
				ImageView imgView = (ImageView) findViewById(R.id.img_imageFromGallary);

				imgView.setImageBitmap(BitmapFactory.decodeFile(imgPath));

				String fileNameSegments[] = imgPath.split("/");
				fileName = fileNameSegments[fileNameSegments.length - 1];

			} else {
				Toast.makeText(this, "You haven't picked Image",
						Toast.LENGTH_LONG).show();
			}
		} catch (Exception e) {

		}

		super.onActivityResult(requestCode, resultCode, data);
	}

	public void executeMultipartPost() throws Exception {
		try {
			ByteArrayOutputStream bos = new ByteArrayOutputStream();
			bm.compress(CompressFormat.JPEG, 75, bos);
			byte[] data = bos.toByteArray();
			HttpClient httpClient = new DefaultHttpClient();
			System.err.println("Founddddddddd");
			HttpPost postRequest = new HttpPost(
					"10.0.2.2/cfc/iphoneWebservice.cfc?returnformat=json&amp;method=testUpload");
			// ByteArrayBody bab = new ByteArrayBody(data, "forest.jpg");
			File file = new File("/mnt/sdcard/forest.png");
			// FileBody bin = new FileBody(file);
			MultipartEntity reqEntity = new MultipartEntity(
					HttpMultipartMode.BROWSER_COMPATIBLE);
			// reqEntity.addPart("uploaded", "");
			reqEntity.addPart("photoCaption", new FileBody(new File(imgPath)));
			postRequest.setEntity(reqEntity);
			HttpResponse response = httpClient.execute(postRequest);
			BufferedReader reader = new BufferedReader(new InputStreamReader(
					response.getEntity().getContent(), "UTF-8"));
			String sResponse;
			StringBuilder s = new StringBuilder();

			while ((sResponse = reader.readLine()) != null) {
				s = s.append(sResponse);
			}
			Log.d("Response: ", "" + s);
		} catch (Exception e) {
			// handle exception here
			Log.e(e.getClass().getName(), e.getMessage());
		}
	}
}
