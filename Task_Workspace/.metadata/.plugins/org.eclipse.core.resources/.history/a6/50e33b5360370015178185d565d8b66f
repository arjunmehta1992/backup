package com.zaptech.placesmap;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.widget.DrawerLayout;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.GoogleMap.InfoWindowAdapter;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;

public class HomeActivity extends FragmentActivity implements LocationListener {

	private GoogleMap googleMap;
	private Spinner spinnerCategory, spinnerKilometer;
	private DrawerLayout mydrawer;
	private static final String GOOGLE_API_KEY = "AIzaSyCPF03hvTSZT8L5nEsCPnhVE2CDtdf_cF0";
	private ListView drawer;
	private ImageView img_Menu;
	double latitude = 0;
	double longitude = 0;
	public String getPlaceType;
	private int PROXIMITY_RADIUS = 1000;
	private OnInfoWindowItemTouchListener infoButtonListener;

	public static double currentLattitude;
	public static double currentLongitude;

	public Context context;
	String str, kilometer;

	@SuppressLint("NewApi")
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		if (!isGooglePlayServicesAvailable()) {
			finish();
		}
		setContentView(R.layout.activity_home);
		init();

		if (netCheckin() == true) {

			Toast.makeText(HomeActivity.this,
					"Internet connection is available", Toast.LENGTH_SHORT)
					.show();

			SupportMapFragment fragment = (SupportMapFragment) getSupportFragmentManager()
					.findFragmentById(R.id.googleMap);

			googleMap = fragment.getMap();

			LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);

			boolean statusOfGPS = locationManager
					.isProviderEnabled(LocationManager.GPS_PROVIDER);

			if (statusOfGPS == true) {
				googleMap.setMyLocationEnabled(true);
				// Criteria criteria = new Criteria();
				// String bestProvider =
				// locationManager.getBestProvider(criteria,
				// true);

				String bestProvider = LocationManager.GPS_PROVIDER;

				Location location = locationManager
						.getLastKnownLocation(bestProvider);

				if (location != null) {
					onLocationChanged(location);
				}
				locationManager.requestLocationUpdates(bestProvider, 20000, 0,
						this);

				googleMap.getUiSettings().setZoomControlsEnabled(true);
				Toast.makeText(HomeActivity.this, "Gps status==" + statusOfGPS,
						Toast.LENGTH_SHORT).show();
				{
					currentLattitude = location.getLatitude();
					currentLongitude = location.getLongitude();
					LatLng latLng = new LatLng(latitude, longitude);
					googleMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));

				}

				Toast.makeText(HomeActivity.this,
						"Latittude=" + latitude + "\t Longitude=" + longitude,
						Toast.LENGTH_SHORT).show();
				final String[] arrayKilometer = getResources().getStringArray(
						R.array.place_kilometer);
				spinnerKilometer
						.setOnItemSelectedListener(new OnItemSelectedListener() {

							@Override
							public void onItemSelected(AdapterView<?> parent,
									View view, int position, long id) {

								kilometer = arrayKilometer[position];
								kilometer = kilometer.concat("000");

								Toast.makeText(HomeActivity.this,
										"Meter" + kilometer, Toast.LENGTH_SHORT)
										.show();

							}

							@Override
							public void onNothingSelected(AdapterView<?> parent) {

							}
						});

				final String[] array = getResources().getStringArray(
						R.array.place_type);
				spinnerCategory
						.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

							@Override
							public void onItemSelected(AdapterView<?> arg0,
									View arg1, int arg2, long arg3) {

								int position = spinnerCategory
										.getSelectedItemPosition();
								Toast.makeText(getApplicationContext(),
										"You have selected " + array[position],
										Toast.LENGTH_LONG).show();

								getPlaceType = array[position];

								StringBuilder googlePlacesUrl = new StringBuilder(
										"https://maps.googleapis.com/maps/api/place/nearbysearch/json?");
								googlePlacesUrl.append("location=" + latitude
										+ "," + longitude);
								googlePlacesUrl.append("&radius=" + kilometer);
								googlePlacesUrl
										.append("&types=" + getPlaceType);
								googlePlacesUrl.append("&sensor=true");
								googlePlacesUrl
										.append("&key=" + GOOGLE_API_KEY);

								GooglePlacesReadTask googlePlacesReadTask = new GooglePlacesReadTask();

								Object[] toPass = new Object[3];
								toPass[0] = googleMap;
								toPass[1] = googlePlacesUrl.toString();
								toPass[2] = spinnerCategory.getItemAtPosition(
										position).toString();
								googlePlacesReadTask.execute(toPass);

							}

							@Override
							public void onNothingSelected(AdapterView<?> arg0) {

							}

						});

			} else {
				Toast.makeText(HomeActivity.this, "Gps is not enable",
						Toast.LENGTH_SHORT).show();
			}

			googleMap.setInfoWindowAdapter(new InfoWindowAdapter() {

				@Override
				public View getInfoWindow(Marker arg0) {
					// TODO Auto-generated method stub
					return null;
				}

				@Override
				public View getInfoContents(Marker arg0) {
					// TODO Auto-generated method stub

					LayoutInflater inflater = (LayoutInflater) context
							.getSystemService(Context.LAYOUT_INFLATER_SERVICE);

					final View infoView = inflater.inflate(
							R.layout.activity_place_info, null);

					TextView tv_placeName = (TextView) infoView
							.findViewById(R.id.txt_PlaceDetails);

					TextView tv_placeAddress = (TextView) infoView
							.findViewById(R.id.txt_PlaceAddress);

					Button btn_ShowDetail = (Button) infoView
							.findViewById(R.id.btn_ShowDetail);
					Button btn_HideMe = (Button) infoView
							.findViewById(R.id.btn_HideMe);

					infoButtonListener = new OnInfoWindowItemTouchListener(
							btn_ShowDetail) {
						@Override
						protected void onClickConfirmed(View v, Marker marker) {

							Toast.makeText(HomeActivity.this,
									marker.getTitle() + "'s button clicked!",
									Toast.LENGTH_SHORT).show();
						}
					};
					


					btn_ShowDetail.setOnTouchListener(infoButtonListener);

					System.err
							.println("++++++++++++++++++INFO WINDOW=========="
									+ arg0.getTitle());

					String PlaceName = arg0.getTitle();

					String[] separated = PlaceName.split(":");

					tv_placeName.append(separated[0]);
					tv_placeAddress.append(separated[1]);

					return infoView;

				}
			});

		} else {
			Toast.makeText(HomeActivity.this,
					"Internet connection is not enable", Toast.LENGTH_SHORT)
					.show();
		}

	}

	public void init() {
		spinnerCategory = (Spinner) findViewById(R.id.spinner_Category);
		spinnerKilometer = (Spinner) findViewById(R.id.spinner_Kilometer);

		context = HomeActivity.this;
	}

	private boolean isGooglePlayServicesAvailable() {
		int status = GooglePlayServicesUtil.isGooglePlayServicesAvailable(this);
		if (ConnectionResult.SUCCESS == status) {
			return true;
		} else {
			GooglePlayServicesUtil.getErrorDialog(status, this, 0).show();
			return false;
		}
	}

	public void onLocationChanged(Location location) {
		latitude = location.getLatitude();
		longitude = location.getLongitude();
		LatLng latLng = new LatLng(latitude, longitude);
		googleMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));
		// googleMap.animateCamera(CameraUpdateFactory.zoomTo(12));
	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onProviderEnabled(String provider) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onProviderDisabled(String provider) {
		// TODO Auto-generated method stub

	}

	// Route Code

	private boolean netCheckin() {
		try {
			ConnectivityManager nInfo = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
			nInfo.getActiveNetworkInfo().isConnectedOrConnecting();

			ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
			NetworkInfo netInfo = cm.getActiveNetworkInfo();
			if (netInfo != null && netInfo.isConnectedOrConnecting()) {
				Log.d("++++++++", "Network available:true");
				return true;
			} else {
				Log.d("+++++++++", "Network available:false");
				return false;
			}
		} catch (Exception e) {
			return false;
		}
	}

}
