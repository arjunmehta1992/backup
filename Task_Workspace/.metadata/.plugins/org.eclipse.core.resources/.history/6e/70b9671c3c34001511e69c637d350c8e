package com.zaptech.placesmap;

import android.annotation.SuppressLint;
import android.content.Context;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Spinner;
import android.widget.Toast;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;

public class HomeActivity extends FragmentActivity implements LocationListener {

	private GoogleMap googleMap;
	private Spinner spinnerCategory;

	private static final String GOOGLE_API_KEY = "AIzaSyCPF03hvTSZT8L5nEsCPnhVE2CDtdf_cF0";

	double latitude = 0;
	double longitude = 0;
	public String getPlaceType;
	private int PROXIMITY_RADIUS = 1000;
	public static double currentLattitude;
	public static double currentLongitude;
	Context context;
	String str;

	@SuppressLint("NewApi")
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		if (!isGooglePlayServicesAvailable()) {
			finish();
		}
		setContentView(R.layout.activity_home);
		init();

		SupportMapFragment fragment = (SupportMapFragment) getSupportFragmentManager()
				.findFragmentById(R.id.googleMap);
		googleMap = fragment.getMap();
		googleMap.setMyLocationEnabled(true);
		
		
		LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
		boolean statusOfGPS = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
		Criteria criteria = new Criteria();
		String bestProvider = locationManager.getBestProvider(criteria, true);
		Location location = locationManager.getLastKnownLocation(bestProvider);
		
		if (location != null) {
			onLocationChanged(location);
		}
		locationManager.requestLocationUpdates(bestProvider, 20000, 0, this);

		googleMap.getUiSettings().setZoomControlsEnabled(true);
		if(statusOfGPS==true)
		{
			currentLattitude = location.getLatitude();
			currentLongitude = location.getLongitude();

		}
		
		
		Toast.makeText(HomeActivity.this,
				"Latittude=" + latitude + "\t Longitude=" + longitude,
				Toast.LENGTH_SHORT).show();

		final String[] array = getResources()
				.getStringArray(R.array.place_type);
		spinnerCategory
				.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

					@Override
					public void onItemSelected(AdapterView<?> arg0, View arg1,
							int arg2, long arg3) {

						int position = spinnerCategory
								.getSelectedItemPosition();
						Toast.makeText(getApplicationContext(),
								"You have selected " + array[position],
								Toast.LENGTH_LONG).show();

						getPlaceType = array[position];

						StringBuilder googlePlacesUrl = new StringBuilder(
								"https://maps.googleapis.com/maps/api/place/nearbysearch/json?");
						googlePlacesUrl.append("location=" + latitude + ","
								+ longitude);
						googlePlacesUrl.append("&radius=" + PROXIMITY_RADIUS);
						googlePlacesUrl.append("&types=" + getPlaceType);
						googlePlacesUrl.append("&sensor=true");
						googlePlacesUrl.append("&key=" + GOOGLE_API_KEY);

						GooglePlacesReadTask googlePlacesReadTask = new GooglePlacesReadTask();

						Object[] toPass = new Object[3];
						toPass[0] = googleMap;
						toPass[1] = googlePlacesUrl.toString();
						toPass[2] = spinnerCategory.getItemAtPosition(position)
								.toString();
						googlePlacesReadTask.execute(toPass);

					}

					@Override
					public void onNothingSelected(AdapterView<?> arg0) {

					}

				});

	}

	public void init() {
		spinnerCategory = (Spinner) findViewById(R.id.spinner_Category);

		context = HomeActivity.this;
	}

	private boolean isGooglePlayServicesAvailable() {
		int status = GooglePlayServicesUtil.isGooglePlayServicesAvailable(this);
		if (ConnectionResult.SUCCESS == status) {
			return true;
		} else {
			GooglePlayServicesUtil.getErrorDialog(status, this, 0).show();
			return false;
		}
	}

	public void onLocationChanged(Location location) {
		latitude = location.getLatitude();
		longitude = location.getLongitude();
		LatLng latLng = new LatLng(latitude, longitude);
		googleMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));
		//googleMap.animateCamera(CameraUpdateFactory.zoomTo(12));
	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onProviderEnabled(String provider) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onProviderDisabled(String provider) {
		// TODO Auto-generated method stub

	}

	// Route Code

	// public void JsonParser(String str) {
	//
	// String time = "";
	// String latitute = "";
	// String longitude = "";
	// String charge = "";
	// String batteryDistance = "";
	// String warning;
	//
	// String active;
	//
	// try {
	//
	// JSONObject mainObj = new JSONObject(str);
	// time = mainObj.getString("datetime");
	// System.err.println("Datetime=" + time);
	//
	// JSONObject locationObj = new JSONObject(
	// mainObj.getString("location"));
	// latitute = locationObj.getString("latitude");
	// longitude = locationObj.getString("longitude");
	// System.err.println("lat" + latitute);
	// System.err.println("long" + longitude);
	//
	// JSONObject batteryObj = new JSONObject(mainObj.getString("battery"));
	// charge = batteryObj.getString("charge");
	// batteryDistance = batteryObj.getString("distance");
	// JSONObject alarmObj = new JSONObject(mainObj.getString("alarm"));
	// warning = alarmObj.getString("warning");
	// active = alarmObj.getString("active");
	//
	// obj_MainModel.setDatetime(time);
	// obj_MainModel.setLatitude(latitute);
	// obj_MainModel.setLongitude(longitude);
	// obj_MainModel.setCharge(charge);
	// obj_MainModel.setDistance(batteryDistance);
	// obj_MainModel.setActive(active);
	// obj_MainModel.setWarning(warning);
	//
	// // Getting URL to the Google Directions API
	//
	// } catch (Exception e) {
	// // TODO: handle exception
	// }
	//
	// }

}
