package com.zaptech.xmldom;

import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.w3c.dom.DOMImplementation;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import android.provider.DocumentsContract.Document;

public class XMLParser {

	public String getXmlFromUrl(String url) {
        String xml = null;
 
        try {
            // defaultHttpClient
            DefaultHttpClient httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost(url);
 
            HttpResponse httpResponse = httpClient.execute(httpPost);
            HttpEntity httpEntity = httpResponse.getEntity();
            xml = EntityUtils.toString(httpEntity);
 
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        // return XML
        return xml;
    }
	
	
	public org.w3c.dom.Document getDomElement(String xml)
	{
		org.w3c.dom.Document doc=null;
		DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
		try {
			
			
			DocumentBuilder db=dbf.newDocumentBuilder();
			InputSource is=new InputSource();
			is.setCharacterStream(new StringReader(xml));
			doc=db.parse(is);
			
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		
		return doc;
		
				
	}
	
	
}
