package com.zaptech.json.DBmodel;

import java.util.ArrayList;

import com.zaptech.json.HomeItemModel;
import com.zaptech.json.R;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

public class DBModel extends SQLiteOpenHelper {

	public static final String DATABASE_NAME = "newsdb.sqlite";

	public static final String TABLE_HOMEITEMS = "homeitems";
	public static final String TABLE_HOMEITEMS_IMAGE = "homeitems_image";

	public static final String HOMEITEMS_ID = "id";
	public static final String HOMEITEMS_INCLUDE_IMAGE_IN_LAYOUT = "includeimageinlayout";
	public static final String HOMEITEMS_INCLUDE_TITLE_IN_LAYOUT = "includetitleinlayout";
	public static final String HOMEITEMS_INCLUDE_TEXT_IN_LAYOUT = "includetextinlayout";
	public static final String HOMEITEMS_IMAGE_POSITION = "imageposition";
	public static final String HOMEITEMS_TITLE_POSITION = "titleposition";
	public static final String HOMEITEMS_TEXT_POSITION = "textposition";
	public static final String HOMEITEMS_TITLE = "title";
	public static final String HOMEITEMS_TEXT = "text";
	public static final String HOMEITEMS_TEXTHTML = "textHTML";
	public static final String HOMEITEMS_TAB_POSITION = "tabposition";
	public static final String HOMEITEMS_TAB_TEXT = "tabtext";
	public static final String HOMEITEMS_TAB_ICON = "tabicon";
	public static final String HOMEITEMS_DATECHANGED = "datechanged";
	public static final String HOMEITEMS_ISDIRTY = "isdirty";
	public static final String HOMEITEMS_TEMP_UNIQUEUID = "tempuniqueuid";
	public static final String HOMEITEMS_TYPE = "type";
	public static final String HOMEITEMS_USE_TAB_ICON = "usetabicon";
	public static final String HOMEITEMS_SORT_POSITION = "sortposition";
	public static final String HOMEITEMS_ARCHIVED = "archived";
	public static final String HOMEITEMS_LIST_ICON = "listicon";

	public static final String HOMEITEMS_IMAGE_ID = "imageid";
	public static final String HOMEITEMS_IMAGE_WIDTH = "width";
	public static final String HOMEITEMS_IMAGE_HEIGHT = "height";
	public static final String HOMEITEMS_IMAGE_ORIGINAL_NAME = "originalname";
	public static final String HOMEITEMS_IMAGE_LOCATION_LOCAL = "locationlocal";
	public static final String HOMEITEMS_IMAGE_TYPE = "imagetype";
	public static final String HOMEITEMS_IMAGE_BASEURL = "baseurl";
	public static final String HOMEITEMS_IMAGE_MIMETYPE = "mimetype";
	public static final String HOMEITEMS_IMAGE_BASE64VERSION = "base64version";
	public static final String HOMEITEMS_IMAGE_ISDIRTY = "isdirty";
	public static final String HOMEITEMS_IMAGE_ARCHIVED = "archived";
	public static final String HOMEITEMS_IMAGE_NAME = "name";
	public static final String HOMEITEMS_IMAGE_FOREIGNid = "id";

	private static SQLiteDatabase myDataBase;
	private static Context myContext;
	HomeItemModel homeItemModel;
	public int count = 0;

	
	
	
	public DBModel(Context context) {
		super(context, context.getResources().getString(R.string.DB_NAME),
				null, 4);
		DBModel.myContext = context;

	}

	@Override
	public void onCreate(SQLiteDatabase db) {
		// TODO Auto-generated method stub

	/*	db.execSQL("create table if not exists " + TABLE_HOMEITEMS + "( "
				+ HOMEITEMS_ID + " varchar primary key, "
				+ HOMEITEMS_INCLUDE_IMAGE_IN_LAYOUT + " text, "
				+ HOMEITEMS_INCLUDE_TITLE_IN_LAYOUT + " text, "
				+ HOMEITEMS_INCLUDE_TEXT_IN_LAYOUT + " text, "
				+ HOMEITEMS_IMAGE_POSITION + " text,"
				+ HOMEITEMS_TITLE_POSITION + " text, "
				+ HOMEITEMS_TEXT_POSITION + " text, " + HOMEITEMS_TITLE
				+ " text," + HOMEITEMS_TEXT + " text," + HOMEITEMS_TEXTHTML
				+ " text," + HOMEITEMS_TAB_POSITION + " text,"
				+ HOMEITEMS_TAB_TEXT + " text," + HOMEITEMS_TAB_ICON + " text,"
				+ HOMEITEMS_DATECHANGED + " text," + HOMEITEMS_ISDIRTY
				+ " text," + HOMEITEMS_TEMP_UNIQUEUID + " text,"
				+ HOMEITEMS_TYPE + " text," + HOMEITEMS_USE_TAB_ICON + " text,"
				+ HOMEITEMS_SORT_POSITION + " text," + HOMEITEMS_ARCHIVED
				+ " text," + HOMEITEMS_LIST_ICON + " text)");

		db.execSQL("create table if not exists " + TABLE_HOMEITEMS_IMAGE + "( "
				+ HOMEITEMS_IMAGE_ID + " varchar," + HOMEITEMS_IMAGE_WIDTH
				+ " text," + HOMEITEMS_IMAGE_HEIGHT + " text,"
				+ HOMEITEMS_IMAGE_ORIGINAL_NAME + " text,"
				+ HOMEITEMS_IMAGE_LOCATION_LOCAL + " text,"
				+ HOMEITEMS_IMAGE_TYPE + " text," + HOMEITEMS_IMAGE_BASEURL
				+ " text," + HOMEITEMS_IMAGE_MIMETYPE + " text,"
				+ HOMEITEMS_IMAGE_BASE64VERSION + " text,"
				+ HOMEITEMS_IMAGE_ISDIRTY + " text," + HOMEITEMS_IMAGE_ARCHIVED
				+ " text," + HOMEITEMS_IMAGE_NAME + " text,"
				+ HOMEITEMS_IMAGE_FOREIGNid + " varchar, foreign key ("
				+ HOMEITEMS_IMAGE_FOREIGNid + " ) references "
				+ TABLE_HOMEITEMS_IMAGE + " ( " + HOMEITEMS_ID + " ) )");*/

	}

	/*public void openDB() {
		SQLiteDatabase db = getWritableDatabase();

	}
*/
	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		// TODO Auto-generated method stub

	}

	public void insertHomeItemsRecord(HomeItemModel modelObj) {

		SQLiteDatabase db = getWritableDatabase();
		ContentValues values = new ContentValues();
		values.put(HOMEITEMS_ID, modelObj.getHomeItem_id());
		values.put(HOMEITEMS_INCLUDE_IMAGE_IN_LAYOUT,
				modelObj.getHomeItem_includeImageInLayout());
		values.put(HOMEITEMS_INCLUDE_TITLE_IN_LAYOUT,
				modelObj.getHomeItem_includeTitleInLayout());
		values.put(HOMEITEMS_INCLUDE_TEXT_IN_LAYOUT,
				modelObj.getHomeItem_includeTextInLayout());
		values.put(HOMEITEMS_IMAGE_POSITION,
				modelObj.getHomeItem_imagePosition());
		values.put(HOMEITEMS_TITLE_POSITION,
				modelObj.getHomeItem_titlePosition());
		values.put(HOMEITEMS_TEXT_POSITION, modelObj.getHomeItem_textPosition());
		values.put(HOMEITEMS_TITLE, modelObj.getHomeItem_title());
		values.put(HOMEITEMS_TEXT, modelObj.getHomeItem_text());
		values.put(HOMEITEMS_TEXTHTML, modelObj.getHomeItem_textHTML());
		values.put(HOMEITEMS_TAB_POSITION, modelObj.getHomeItem_tabPosition());
		values.put(HOMEITEMS_TAB_TEXT, modelObj.getHomeItem_tabText());
		values.put(HOMEITEMS_TAB_ICON, modelObj.getHomeItem_tabIcon());
		values.put(HOMEITEMS_DATECHANGED, modelObj.getHomeItem_dateChanged());
		values.put(HOMEITEMS_ISDIRTY, modelObj.getHomeItem_isDirty());
		values.put(HOMEITEMS_TEMP_UNIQUEUID,
				modelObj.getHomeItem_tempUniqueUID());
		values.put(HOMEITEMS_TYPE, modelObj.getHomeItem_Type());
		values.put(HOMEITEMS_USE_TAB_ICON, modelObj.getHomeItem_tabIcon());
		values.put(HOMEITEMS_SORT_POSITION, modelObj.getHomeItem_sortPosition());
		values.put(HOMEITEMS_ARCHIVED, modelObj.getHomeItem_archived());
		values.put(HOMEITEMS_LIST_ICON, modelObj.getHomeItem_listIcon());
		db.insert(TABLE_HOMEITEMS, null, values);

	}

	public void insertHomeItems_Image_Record(HomeItemModel modelObj) {

		SQLiteDatabase db = getWritableDatabase();
		ContentValues values = new ContentValues();
		values.put(HOMEITEMS_IMAGE_ID, modelObj.getHomeItem_Image_id());
		values.put(HOMEITEMS_IMAGE_WIDTH, modelObj.getHomeItem_Image_width());
		values.put(HOMEITEMS_IMAGE_HEIGHT, modelObj.getHomeItem_Image_height());
		values.put(HOMEITEMS_IMAGE_ORIGINAL_NAME,
				modelObj.getHomeItem_Image_originaleName());
		values.put(HOMEITEMS_IMAGE_LOCATION_LOCAL,
				modelObj.getHomeItem_Image_locationLocal());
		values.put(HOMEITEMS_IMAGE_TYPE, modelObj.getHomeItem_Image_type());
		values.put(HOMEITEMS_IMAGE_BASEURL,
				modelObj.getHomeItem_Image_baseURL());
		values.put(HOMEITEMS_IMAGE_MIMETYPE,
				modelObj.getHomeItem_Image_MIMEType());
		values.put(HOMEITEMS_IMAGE_BASE64VERSION,
				modelObj.getHomeItem_Image_base64Version());
		values.put(HOMEITEMS_IMAGE_ISDIRTY,
				modelObj.getHomeItem_Image_isDirty());
		values.put(HOMEITEMS_IMAGE_ARCHIVED,
				modelObj.getHomeItem_Image_Archived());
		values.put(HOMEITEMS_IMAGE_NAME, modelObj.getHomeItem_Image_Name());
		values.put(HOMEITEMS_IMAGE_FOREIGNid, modelObj.getHomeItem_id());
		db.insert(TABLE_HOMEITEMS_IMAGE, null, values);

	}

	public ArrayList<HomeItemModel> getHomeItemsData() {
		SQLiteDatabase db = getReadableDatabase();
		ArrayList<HomeItemModel> list = new ArrayList<HomeItemModel>();
		Cursor cursor = db.rawQuery("select * from " + TABLE_HOMEITEMS, null);
		if (cursor.getCount() > 0) {
			if(cursor!=null)
			{
				if (cursor.moveToFirst()) {
					do {
					HomeItemModel homeItemModel_obj = new HomeItemModel();

					homeItemModel_obj
							.setHomeItem_includeImageInLayout(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_INCLUDE_IMAGE_IN_LAYOUT)));
					homeItemModel_obj
							.setHomeItem_includeTitleInLayout(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_INCLUDE_TITLE_IN_LAYOUT)));
					homeItemModel_obj.setHomeItem_imagePosition(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_POSITION)));
					homeItemModel_obj.setHomeItem_titlePosition(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_TITLE_POSITION)));
					homeItemModel_obj.setHomeItem_textPosition(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_TEXT_POSITION)));
					homeItemModel_obj.setHomeItem_title(cursor.getString(cursor
							.getColumnIndex(HOMEITEMS_TITLE)));
					homeItemModel_obj.setHomeItem_text(cursor.getString(cursor
							.getColumnIndex(HOMEITEMS_TEXT)));
					homeItemModel_obj.setHomeItem_textHTML(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_TEXTHTML)));
					homeItemModel_obj.setHomeItem_id(cursor.getString(cursor
							.getColumnIndex(HOMEITEMS_ID)));
					homeItemModel_obj.setHomeItem_tabPosition(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_TAB_POSITION)));
					homeItemModel_obj.setHomeItem_tabText(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_TAB_TEXT)));
					homeItemModel_obj.setHomeItem_tabIcon(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_TAB_ICON)));
					homeItemModel_obj.setHomeItem_dateChanged(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_DATECHANGED)));
					homeItemModel_obj
							.setHomeItem_isDirty(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_ISDIRTY)));
					homeItemModel_obj.setHomeItem_tempUniqueUID(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_TEMP_UNIQUEUID)));
					homeItemModel_obj.setHomeItem_Type(cursor.getString(cursor
							.getColumnIndex(HOMEITEMS_TYPE)));
					homeItemModel_obj.setHomeItem_useTabIcon(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_USE_TAB_ICON)));
					homeItemModel_obj.setHomeItem_sortPosition(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_SORT_POSITION)));
					homeItemModel_obj.setHomeItem_archived(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_ARCHIVED)));
					homeItemModel_obj.setHomeItem_listIcon(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_LIST_ICON)));

					/*homeItemModel_obj.setHomeItem_Image_width(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_WIDTH)));
					homeItemModel_obj.setHomeItem_Image_height(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_HEIGHT)));
					homeItemModel_obj
							.setHomeItem_Image_originaleName(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_ORIGINAL_NAME)));
					homeItemModel_obj
							.setHomeItem_Image_locationLocal(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_LOCATION_LOCAL)));
					homeItemModel_obj.setHomeItem_Image_type(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_TYPE)));
					homeItemModel_obj.setHomeItem_Image_baseURL(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_BASEURL)));
					homeItemModel_obj.setHomeItem_Image_MIMEType(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_MIMETYPE)));
					homeItemModel_obj
							.setHomeItem_Image_base64Version(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_BASE64VERSION)));
					homeItemModel_obj.setHomeItem_Image_isDirty(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_ISDIRTY)));
					homeItemModel_obj.setHomeItem_Image_id(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_ID)));
					homeItemModel_obj.setHomeItem_Image_Name(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_NAME)));*/
					list.add(homeItemModel_obj);
				} while (cursor.moveToNext());
			}
			}
		}
		return list;

	}
	public ArrayList<HomeItemModel> getHomeItemsImageData() {
		SQLiteDatabase db = getReadableDatabase();
		ArrayList<HomeItemModel> list = new ArrayList<HomeItemModel>();
		Cursor cursor = db.rawQuery("select * from " + TABLE_HOMEITEMS_IMAGE, null);
		if (cursor.getCount() > 0) {
			if(cursor!=null)
			{
				if (cursor.moveToFirst()) {
					do {
					HomeItemModel homeItemModel_obj = new HomeItemModel();

					homeItemModel_obj.setHomeItem_Image_width(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_WIDTH)));
					homeItemModel_obj.setHomeItem_Image_height(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_HEIGHT)));
					homeItemModel_obj
							.setHomeItem_Image_originaleName(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_ORIGINAL_NAME)));
					homeItemModel_obj
							.setHomeItem_Image_locationLocal(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_LOCATION_LOCAL)));
					homeItemModel_obj.setHomeItem_Image_type(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_TYPE)));
					homeItemModel_obj.setHomeItem_Image_baseURL(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_BASEURL)));
					homeItemModel_obj.setHomeItem_Image_MIMEType(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_MIMETYPE)));
					homeItemModel_obj
							.setHomeItem_Image_base64Version(cursor.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_BASE64VERSION)));
					homeItemModel_obj.setHomeItem_Image_isDirty(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_ISDIRTY)));
					homeItemModel_obj.setHomeItem_Image_id(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_ID)));
					homeItemModel_obj.setHomeItem_Image_Name(cursor
							.getString(cursor
									.getColumnIndex(HOMEITEMS_IMAGE_NAME)));
					list.add(homeItemModel_obj);
				} while (cursor.moveToNext());
			}
			}
		}
		return list;

	}

}
