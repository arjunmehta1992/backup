package com.zaptech.json;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

public class HomeActivity extends Activity {

	ProgressDialog mProgress;
	TextView mTextview;
	String appMetaDataStr, versionNumberStr, tABVersionNUmberStr,
			webServicesURLStr, appNameStr;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_home);
		mTextview = (TextView) findViewById(R.id.txt_Data);

		new getJsonData().execute();
	}

	public String GET(String url) {
		InputStream inputStream = null;
		String result = "";
		try {

			// create HttpClient
			HttpClient httpclient = new DefaultHttpClient();

			// make GET request to the given URL
			HttpResponse httpResponse = httpclient.execute(new HttpGet(url));

			// receive response as inputStream
			inputStream = httpResponse.getEntity().getContent();

			// convert inputstream to string
			if (inputStream != null)
				result = convertInputStreamToString(inputStream);
			else
				result = "Did not work!";

		} catch (Exception e) {
			Log.d("InputStream", e.getLocalizedMessage());
		}

		return result;
	}

	// convert inputstream to String
	private static String convertInputStreamToString(InputStream inputStream)
			throws IOException {
		BufferedReader bufferedReader = new BufferedReader(
				new InputStreamReader(inputStream));
		String line = "";
		String result = "";
		while ((line = bufferedReader.readLine()) != null)
			result += line;

		inputStream.close();
		return result;

	}

	public class getJsonData extends AsyncTask<Void, Void, Void> {

		String str = "";

		@Override
		protected void onPreExecute() {

			mProgress = new ProgressDialog(HomeActivity.this);
			mProgress.setTitle("Image Loader");
			mProgress.setMessage("Loading...");
			mProgress.setCancelable(false);
			mProgress.show();

			super.onPreExecute();
		}

		@Override
		protected Void doInBackground(Void... params) {

			str = GET("http://80.93.28.24/json/autoexpress.json");

			Log.i("Response", ">>>" + str);

			return null;
		}

		@Override
		protected void onPostExecute(Void result) {

			if (mProgress.isShowing()) {
				mProgress.dismiss();
			}
			/*
			 * if (mBitmap!=null) { mImageview.setImageBitmap(mBitmap); }
			 */
			String data = JsonParser(str);
			mTextview.setText(data);
			super.onPostExecute(result);
		}

	}

	public String JsonParser(String str) {
		String data = "";
		try {

			JSONObject mainObj = new JSONObject(str);
			
			versionNumberStr=mainObj.getString("appName")
			
			data = versionNumberStr;

			Log.i("response>>>>>>>>", "" + data);

		} catch (Exception e) {
			// TODO: handle exception
		}

		return data;
	}

}
