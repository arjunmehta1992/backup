package com.example.jsonparser;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import org.apache.http.HttpConnection;
import org.json.JSONObject;

import android.provider.Telephony.Sms.Conversations;

public class HandlerXML {

	private String country = "county";
	private String temperature = "temperature";
	private String humidity = "humidity";
	private String pressure = "pressure";
	private String urlString = null;

	public volatile boolean parsingComplete = true;

	public HandlerXML(String url) {
		this.urlString = url;
	}

	public String getTempreture() {
		return temperature;
	}

	public String getCountry() {
		return country;
	}

	public String getHumidity() {
		return humidity;
	}

	public String getPressure() {
		return pressure;
	}

	public void readAndParseJSON(String in) {
		try {

			JSONObject reader = new JSONObject(in);

			JSONObject sys = reader.getJSONObject("sys");
			country = sys.getString("sys");

			JSONObject main = reader.getJSONObject("main");
			temperature = main.getString("temp");
			pressure = main.getString("pressure");
			humidity = main.getString("humidity");
			parsingComplete = false;

		} catch (Exception e) {
			// TODO: handle exception
		}

	}

	public void fetchJSON() {
		Thread thread = new Thread(new Runnable() {

			@Override
			public void run() {
				try {

					URL url = new URL(urlString);
					HttpURLConnection conn = (HttpURLConnection) url
							.openConnection();
					conn.setReadTimeout(10000);
					conn.setConnectTimeout(15000);
					conn.setRequestMethod("GET");
					conn.setDoInput(true);
					conn.connect();

					InputStream stream = conn.getInputStream();
					String data = convertStreamToString(stream);
					
					
					
					readAndParseJSON(data);
					stream.close();

				} catch (MalformedURLException e) {

					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}

		});

	}

	static String convertStreamToString(java.io.InputStream is) {
		java.util.Scanner s = new java.util.Scanner(is).useDelimiter("\\A");
		return s.hasNext() ? s.next() : "";

	}

}
