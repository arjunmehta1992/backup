package com.example.mediaplayer;

import java.util.concurrent.TimeUnit;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.Handler;
import android.widget.ImageButton;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity {

	TextView songName,startTimeField,endTimeField;
	 private MediaPlayer mediaPlayer;
	   private double startTime = 0;
	   private double finalTime = 0;
	   private Handler myHandler = new Handler();;
	   private int forwardTime = 5000; 
	   private int backwardTime = 5000;
	   private SeekBar seekbar;
	   private ImageButton playButton,pauseButton;
	   public static int oneTimeOnly = 0;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
	}

	
	public void init()
	{
		songName = (TextView)findViewById(R.id.textView4);
	      startTimeField =(TextView)findViewById(R.id.textView1);
	      endTimeField =(TextView)findViewById(R.id.textView2);
	      seekbar = (SeekBar)findViewById(R.id.seekBar1);
	      playButton = (ImageButton)findViewById(R.id.imageButton1);
	      pauseButton = (ImageButton)findViewById(R.id.imageButton2);
	      songName.setText("song.mp3");
	      mediaPlayer = MediaPlayer.create(this, R.raw.song);
	      seekbar.setClickable(false);
	      pauseButton.setEnabled(false);

	}
	
	
	
	@SuppressLint("NewApi")
	private void play() {
	
		
		Toast.makeText(MainActivity.this, "Playing sound", 
				   Toast.LENGTH_SHORT).show();
		mediaPlayer.start();
		finalTime = mediaPlayer.getDuration();
	      startTime = mediaPlayer.getCurrentPosition();
	      if(oneTimeOnly == 0){
	          seekbar.setMax((int) finalTime);
	          oneTimeOnly = 1;
	       } 
	      
	      
	      endTimeField.setText(String.format("%d min, %d sec",TimeUnit.MILLISECONDS.toMinutes((long) finalTime),TimeUnit.MILLISECONDS.toSeconds((long) finalTime) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes((long) finalTime))));

	      startTimeField.setText(String.format("%d min, %d sec",TimeUnit.MILLISECONDS.toMinutes((long) startTime),TimeUnit.MILLISECONDS.toSeconds((long) startTime) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes((long) startTime))));
	
	      seekbar.setProgress((int)startTime);
	      myHandler.postDelayed(UpdateSongTime,100);
	      pauseButton.setEnabled(true);
	      playButton.setEnabled(false);
	
	}
	
	
	
	
}
